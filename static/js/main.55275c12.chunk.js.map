{"version":3,"sources":["Add.js","Dashboard.js","apiClient.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Add","props","useState","disabled","cDisabled","Date","startDate","setStartDate","Modal","size","show","onHide","handleClose","Header","closeButton","ModalTitle","formTitle","Form","onSubmit","e","preventDefault","persist","console","log","target","date","value","currentEvent","client","updateEvent","_id","name","location","price","info","addEvent","then","reset","refreshList","catch","alert","submitHandler","id","Body","Container","Group","controlId","Label","Control","type","defaultValue","placeholderText","dateFormat","closeOnScroll","selected","showPopperArrow","onChange","as","rows","Button","variant","onClick","Dashboard","events","cEvents","undefined","current","cCurrent","window","localStorage","getItem","token","changeToken","SetShow","handleShow","add","getAllEvents","response","data","useEffect","Navbar","bg","expand","fluid","Brand","href","Toggle","aria-controls","Collapse","Nav","className","style","maxHeight","navbarScroll","Link","removeItem","color","FormControl","placeholder","aria-label","Card","width","Title","Subtitle","Text","map","key","removeEvent","url","ApiClient","logoutHandler","this","method","axios","error","headers","authorization","status","Promise","reject","username","password","apiCall","userName","authenticatedCall","Login","login","loggedIn","err","addNewUser","signupHandler","App","newToken","setItem","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.55275c12.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Button, Container, Form, Modal, ModalTitle } from \"react-bootstrap/\";\r\n\r\n\r\nfunction Add(props) {\r\n  const [disabled, cDisabled] = useState(false);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    console.log(e.target.date.value);\r\n    cDisabled(true);\r\n    let result;\r\n    if (props.currentEvent) {\r\n      result = props.client.updateEvent(\r\n        props.currentEvent._id,\r\n        e.target.name.value,\r\n        e.target.location.value,\r\n        e.target.date.value,\r\n        e.target.price.value,\r\n        e.target.info.value\r\n      );\r\n    } else {\r\n      result = props.client.addEvent(\r\n        e.target.name.value,\r\n        e.target.location.value,\r\n        e.target.date.value,\r\n        e.target.price.value,\r\n        e.target.info.value\r\n      );\r\n    }\r\n    result\r\n      .then(() => {\r\n        cDisabled(false);\r\n        e.target.reset();\r\n        props.refreshList();\r\n      })\r\n      .catch(() => {\r\n        alert(\"an error occured, please try again\");\r\n        cDisabled(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal size=\"xl\" show={props.show} onHide={props.handleClose}>\r\n      <Modal.Header closeButton>\r\n        <ModalTitle>{props.formTitle} Event</ModalTitle>\r\n      </Modal.Header>\r\n      <Form onSubmit={(e) => submitHandler(e)} id=\"addForm\">\r\n        <Modal.Body>\r\n          <Container id=\"formContainer\">\r\n              <Form.Group controlId=\"eventName\">\r\n                <Form.Label>Event Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={props.currentEvent?.name}\r\n                  name=\"name\"\r\n                  disabled={disabled}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"eventLocation\">\r\n                <Form.Label>Location</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={props.currentEvent?.location}\r\n                  name=\"location\"\r\n                  disabled={disabled}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"eventDate\">\r\n                <Form.Label>Date</Form.Label>\r\n                <DatePicker\r\n                  name=\"date\"\r\n                  placeholderText=\"Click to select a date\"\r\n                  dateFormat=\"dd-MM-yyyy\"\r\n                  closeOnScroll={true}\r\n                  selected={startDate}\r\n                  showPopperArrow={false}\r\n                  onChange={(date) => setStartDate(date)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"eventPrice\">\r\n                <Form.Label>Ticket Price (£)</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  defaultValue={props.currentEvent?.price}\r\n                  name=\"price\"\r\n                  disabled={disabled}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"textInput\">\r\n                <Form.Label>Info</Form.Label>\r\n                <Form.Control\r\n                  name=\"info\"\r\n                  as=\"textarea\"\r\n                  rows={5}\r\n                  defaultValue={props.currentEvent?.info}\r\n                  disabled={disabled}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                onClick={props.handleClose}\r\n              >\r\n                Submit\r\n              </Button>\r\n           \r\n          </Container>\r\n        </Modal.Body>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Add;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FiTrash2 } from 'react-icons/fi';\r\nimport \"./App.css\";\r\nimport Add from \"./Add\";\r\nimport { RiLogoutBoxRFill } from 'react-icons/ri';\r\nimport {\r\n  Navbar,\r\n  Card,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Container,\r\n} from \"react-bootstrap\";\r\n\r\n\r\nfunction Dashboard(props) {\r\n  const [events, cEvents] = useState([]);\r\n  const [current, cCurrent] = useState(undefined);\r\n  const [token, changeToken] = useState(window.localStorage.getItem(\"token\"));\r\n\r\n  const logout = () => {\r\n    console.log(token)\r\n    window.localStorage.removeItem(\"token\")\r\n    changeToken(\"\");\r\n  };\r\n\r\n  const [show, SetShow] = useState(false);\r\n\r\n  const handleShow = (add) => {\r\n    if (add === true) {\r\n      cCurrent(undefined);\r\n    }\r\n    SetShow(true);\r\n  };\r\n  const handleClose = () => SetShow(false);\r\n\r\n  const refreshList = () => {\r\n    props.client.getAllEvents().then((response) => cEvents(response.data));\r\n  };\r\n\r\n  const removeEvent = (id) => {\r\n    props.client.removeEvent(id).then(() => refreshList());\r\n  };\r\n\r\n  const updateEvent = (event) => {\r\n    cCurrent(event);\r\n    handleShow();\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, []);\r\n\r\n  const buildrows = () => {\r\n    return events.map((current) => {\r\n      return (\r\n        <div key={current.id}>\r\n          <Card className=\"otherCard\" style={{ width: \"100%\" }}>\r\n            <Card.Header as=\"h5\" className=\"card-header\">\r\n              <Card.Title>\r\n                {current.name}\r\n                <span className=\"float-right\">\r\n                  {current.date}\r\n                  <br />\r\n                  Price: <span className=\"bold\">£{current.price}</span>\r\n                </span>\r\n              </Card.Title>\r\n              <Card.Subtitle className=\"text-muted\">\r\n                {current.location}\r\n              </Card.Subtitle>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Text className=\"mb-1\">{current.info}</Card.Text>\r\n              <span className=\"card-trash\">\r\n                <Button onClick={() => updateEvent(current)} variant=\"primary\">\r\n                  Update\r\n                </Button>\r\n                &nbsp;&nbsp;\r\n                <Button\r\n                  onClick={() => removeEvent(current._id)}\r\n                  variant=\"danger\"\r\n                >\r\n                  <FiTrash2 />\r\n                </Button>\r\n              </span>\r\n            </Card.Body>\r\n          </Card>\r\n          <br />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n          <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"#\">Events App</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n          <Navbar.Collapse id=\"navbarScroll\">\r\n            <Nav\r\n              className=\"me-auto my-2 my-lg-0\"\r\n              style={{ maxHeight: \"100px\" }}\r\n              navbarScroll\r\n            >\r\n            </Nav>\r\n            <Nav.Link onClick={logout} href=\"#\" style={{ color: \"rgba(0,0,0,.9)\" }}>Logout <RiLogoutBoxRFill /></Nav.Link>\r\n            <Form className=\"d-flex\">\r\n              <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                className=\"me-2\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <Button variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <br />\r\n\r\n      <Container>\r\n        <Card className=\"otherCard\" style={{ width: \"100%\" }}>\r\n          <Card.Header as=\"h5\" className=\"card-header\">\r\n            <Card.Title>\r\n              Add Your Event Here\r\n              <span className=\"float-right\">\r\n                When is it?\r\n                <br />\r\n                Price: <span className=\"bold\">£</span>\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle className=\"text-muted\">Where is it?</Card.Subtitle>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Card.Text className=\"mb-1\">\r\n              Tells us more about your event...\r\n            </Card.Text>\r\n            <span className=\"card-trash\">\r\n              <Button onClick={() => handleShow(true)} variant=\"primary\">\r\n                Add Event\r\n              </Button>\r\n            </span>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n      <br />\r\n      <Container>{buildrows()}</Container>\r\n      <br />\r\n      <Add\r\n        client={props.client}\r\n        show={show}\r\n        handleClose={handleClose}\r\n        handleShow={handleShow}\r\n        refreshList={() => {\r\n          refreshList();\r\n          cCurrent(undefined);\r\n        }}\r\n        currentEvent={current}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import axios from \"axios\";\r\n//const url = \"http://localhost:3001/\";\r\nconst url = \"https://rowens96-events-app.herokuapp.com/\";\r\n\r\nexport class ApiClient {\r\n  constructor(token, logoutHandler) {\r\n    this.token = token;\r\n    this.logoutHandler = logoutHandler;\r\n  }\r\n\r\n  apiCall(method, url, data) {\r\n    console.log(url);\r\n\r\n    return axios({\r\n      method,\r\n      url,\r\n      data,\r\n    }).catch((error) => {\r\n      throw error;\r\n    });\r\n  }\r\n\r\n  authenticatedCall(method, url, data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      headers: {\r\n        authorization: this.token,\r\n      },\r\n      data,\r\n    }).catch((error) => {\r\n      if (error.response.status === 403) {\r\n        this.logoutHandler();\r\n        return Promise.reject;\r\n      } else {\r\n        throw error;\r\n      }\r\n    });\r\n  }\r\n\r\n  login(username, password) {\r\n    // console.log(\"username\",username)\r\n    // console.log(\"password\",password)\r\n    return this.apiCall(\"post\", `${url}auth`, {\r\n      userName: username,\r\n      password: password,\r\n    });\r\n  }\r\n\r\n\r\n  addNewUser(username, password) {\r\n    return this.authenticatedCall(\"post\", `${url}signup`, { username, password});\r\n  };\r\n\r\n  getAllEvents() {\r\n    return this.authenticatedCall(\"get\", `${url}event`);\r\n  }\r\n\r\n  getEventById(id) {\r\n    return this.authenticatedCall(\"get\", `${url}search/id/${id}`);\r\n  }\r\n\r\n  getEventByName(name) {\r\n    return this.authenticatedCall(\"get\", `${url}search/name/${name}`);\r\n  }\r\n\r\n  getEventsByLocation(location) {\r\n    return this.authenticatedCall(\"get\", `${url}search/location/${location}`);\r\n  }\r\n\r\n  getEventsByDate(date) {\r\n    return this.authenticatedCall(\"get\", `${url}search/date/${date}`);\r\n  }\r\n\r\n  addEvent(name, location, date, price, info) {\r\n    return this.authenticatedCall(\"post\", `${url}event`, {\r\n      name,\r\n      location,\r\n      date,\r\n      price,\r\n      info,\r\n    });\r\n  }\r\n\r\n  removeEvent(id) {\r\n    return this.authenticatedCall(\"delete\", `${url}event/${id}`);\r\n  }\r\n\r\n  updateEvent(id, name, location, date, price, info) {\r\n    return this.authenticatedCall(\"put\", `${url}event/${id}`, {\r\n      name,\r\n      location,\r\n      date,\r\n      price,\r\n      info,\r\n    });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport { Button, Container } from \"react-bootstrap\";\r\n\r\nfunction Login(props) {\r\n  const [disabled, cDisabled] = useState(false);\r\n\r\n  const submitHandler = (e) => {\r\n    // console.log(\"submit\");\r\n\r\n    e.preventDefault();\r\n    cDisabled(true);\r\n    props.client\r\n      .login(e.target.username.value, e.target.password.value)\r\n      .then((response) => {\r\n        cDisabled(false);\r\n        props.loggedIn(response.data.token);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Invalid username and password\");\r\n        console.log(err);\r\n        cDisabled(false);\r\n      });\r\n  };\r\n\r\n  const signupHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(props);\r\n    console.log(e);\r\n    props.client\r\n      .addNewUser(e.target.username.value, e.target.password.value)\r\n      .then((response) => {\r\n        cDisabled(false);\r\n        // props.loggedIn(response.data.token);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"an error has occurred\");\r\n        console.log(err);\r\n        cDisabled(false);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-child\">\r\n      <span className=\"login-header\">Hello</span>\r\n      <hr />\r\n      <form onSubmit={(e) => submitHandler(e)}>\r\n        username\r\n        <br />\r\n        <input type=\"text\" name=\"username\" disabled={disabled} />\r\n        <br />\r\n        password\r\n        <br />\r\n        <input type=\"password\" name=\"password\" disabled={disabled} />\r\n        <br />\r\n        <br />\r\n        <Button variant=\"outline-success\" type=\"submit\" disabled={disabled}>\r\n          {\" \"}\r\n          Login{\" \"}\r\n        </Button>\r\n&nbsp;&nbsp;&nbsp;\r\n        <Button variant=\"outline-primary\" onClick={(e) => signupHandler(e)} type=\"\" disabled={disabled}>\r\n          {\" \"}\r\n          Sign Up{\" \"}\r\n        </Button>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport { ApiClient } from \"./apiClient\";\r\nimport { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Login from \"./Login\";\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  const [token, changeToken] = useState(window.localStorage.getItem(\"token\"));\r\n  \r\n\r\n  const logout = () => {\r\n    window.localStorage.removeItem(\"token\")\r\n    changeToken(\"\");\r\n  };\r\n\r\n  const loggedIn = (newToken) => {\r\n    window.localStorage.setItem(\"token\", newToken);\r\n    changeToken(newToken);\r\n  };\r\n\r\n  const client = new ApiClient(token, logout);\r\n\r\n  return (\r\n    <>\r\n      {token ? (\r\n        <Dashboard client={client} />\r\n      ) : (\r\n        <div className=\"login-parent\">\r\n          <div className=\"login-form\">\r\n            <Login client={client} loggedIn={loggedIn} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}